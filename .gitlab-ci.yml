####################################################################
#
# This script controls the gitlab runner to copy the repo to
# REPO_DIR when changes are made to the main branch.
# Before using, you MUST change REPO_DIR to your new directory.
# The new directory should exist first.
#
####################################################################

stages:
    - test
    - copy

variables:
    REPO_DIR: "/opt/mlshare/$CI_PROJECT_NAME"
    ENV_DIR: "/opt/mlshare/envs/$CI_PROJECT_NAME"

empty-job:
  stage: test
  rules:
    - if: $CI_COMMIT_BRANCH != "main" || ($CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_BRANCH_NAME != "main")
  script:
    - echo "Running empty pipeline job to handle bug when no jobs can be run (based on rules)."

# copy-repo-ml1:
#     stage: copy
#     rules:
#         - if: $CI_COMMIT_BRANCH == "main" || ($CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_BRANCH_NAME == "main")
#     tags:
#         - ML1
#     script:
#         - echo "Working directory:"
#         - pwd
#         - echo "Copying repo to ML1 '${REPO_DIR}'"
#         - chown -R gitlab-runner:ml .
#         - chmod -R 2755 .
#         - rsync -aPv --delete --exclude 'secrets' --exclude 'results' ./ ${REPO_DIR}

copy-repo-ml2:
    stage: copy
    rules:
        - if: $CI_COMMIT_BRANCH == "main" || ($CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_BRANCH_NAME == "main")
    tags:
        - ML2
    script:
        - echo "Working directory:"
        - pwd
        - echo "Copying repo to ML2 '$REPO_DIR'"
        - chown -R gitlab-runner:ml .
        - chmod -R 2755 .
        - rsync -aPv --delete --exclude 'secrets' --exclude 'results' ./ $REPO_DIR


